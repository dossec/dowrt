#
# https://github.com/P3TERX/Actions-OpenWrt
#
# File: .github/workflows/openwrt-bulder.yml
# Description: Build OpenWrt using GitHub Actions
#
# Copyright (c) 2019-2024 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
# openvpn n2n vnt clash

name: WR30U_237_23.05

on:
  repository_dispatch:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/padavanonly/immortalwrt-mt798x-23.05
  REPO_BRANCH: openwrt-23.05
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: wr30u_23.05_237.config
  DIY_P1_SH: mt7981_23.05-part1.sh
  DIY_P2_SH: mt7981-part2.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout Projects
      uses: actions/checkout@main

    - name: Free Disk Space
      uses: endersonmenezes/free-disk-space@main
      with:
        testing: false
        remove_android: true
        remove_dotnet: true
        remove_haskell: true
        remove_tool_cache: true
        remove_swap: true
        remove_packages: "android* azure* clang* dotnet* firefox* ghc* golang* google* libclang* libgl1* lld* llvm* \
          microsoft* mongodb* mono* mysql* nodejs* openjdk* php* postgresql* powershell* snap* temurin* yarn* zulu*"
        remove_packages_one_command: true
        remove_folders: "/etc/apt/sources.list.d* /etc/mono* /etc/mysql* /usr/include/linux/android* /usr/lib/llvm* /usr/lib/mono* \
          /usr/local/lib/android* /usr/local/lib/node_modules* /usr/local/share/chromium* /usr/local/share/powershell* \
          /usr/local/share/vcpkg/ports/azure* /usr/local/share/vcpkg/ports/google* /usr/local/share/vcpkg/ports/libpq/android* \
          /usr/local/share/vcpkg/ports/llvm* /usr/local/share/vcpkg/ports/mysql* /usr/local/share/vcpkg/ports/snap* \
          /usr/share/azure* /usr/share/dotnet* /usr/share/glade* /usr/share/miniconda* /usr/share/php* /usr/share/swift \
          /var/lib/mysql* /var/log/azure*"

    - name: Initialization Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt -yqq update
        sudo -E apt -yqq full-upgrade
        sudo -E apt -yqq autoremove --purge
        sudo -E apt -yqq autoclean
        sudo -E apt -yqq clean
        sudo -E apt -yqq install dos2unix
        sudo bash -c 'bash <(curl -sL https://build-scripts.immortalwrt.org/init_build_environment.sh)'
        sudo -E systemctl daemon-reload
        sudo -E timedatectl set-timezone "Asia/Shanghai"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Initialization Values
      run: |
        export WRT_DATE=$(TZ=UTC-8 date +"%y.%m.%d_%H.%M.%S")
        export WRT_CI=$(basename $GITHUB_WORKSPACE)
        
    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "status=success" >> $GITHUB_OUTPUT
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        # [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        # 检查 DEVICE_NAME 文件是否存在，并按格式输出设备名称
        if [ -s DEVICE_NAME ]; then
          # 遍历设备列表并按要求格式化输出
          while IFS= read -r device; do
            # 构建 DEVICE_NAME 环境变量，格式为 DEVICE_NAME=_<device-name>
            echo "DEVICE_NAME=_$device" >> $GITHUB_ENV
          done < DEVICE_NAME
        fi
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Upload bin directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT
        
    - name: Calculate MD5 [计算MD5]
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        cd ${{ env.FIRMWARE }} && rm -rf sha256sums
        MD5=$(md5sum * | awk '{ print $2 " " $1 }' | sed ':a;N;$!ba;s/\n/<br>/g')
        echo "MD5=$MD5" >> $GITHUB_ENV


    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware_${{ env.CONFIG_FILE }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Generate release tag
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "release_tag=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_OUTPUT
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload firmware to release
      uses: softprops/action-gh-release@v2
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body: |
          - 本项目是基于237 23.05源代码编译大分区固件，使用默认配置，适用于WR30U设备，纯净版无任何第三方软件包。
          - WR30U_237_23.05.yml
          - 默认IP：192.168.6.1
          - 默认账号：root
          - 默认密码：password
          - 源码更新详情[点击这里查看](https://github.com/padavanonly/immortalwrt-mt798x-23.05)
          - **请仔细检查MD5以确保完整性后再进行刷入！**
          `md5信息`
          > ${{ env.MD5 }}
        files: ${{ env.FIRMWARE }}/*

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@main
      with:
        retain_days: 0
        keep_minimum_runs: 2

#    - name: Remove old Releases
#      uses: dev-drprasad/delete-older-releases@master
#      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
#      with:
#        keep_latest: 3
#        delete_tags: true
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
